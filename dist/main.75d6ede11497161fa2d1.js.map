{"version":3,"sources":["webpack:///main.75d6ede11497161fa2d1.js","webpack:///./src/index.js","webpack:///./src/api/userApi.js","webpack:///./~/whatwg-fetch/dist/fetch.umd.js","webpack:///./src/api/baseUrl.js"],"names":["webpackJsonp","module","exports","__webpack_require__","global","_userApi","getUsers","then","result","usersBody","forEach","user","id","firstName","lastName","email","document","getElementById","innerHTML","deleteLinks","getElementsByClassName","Array","from","link","onclick","event","element","target","preventDefault","deleteUser","attributes","value","row","parentNode","removeChild","call","this","_interopRequireDefault","obj","__esModule","default","get","del","url","fetch","baseUrl","onSuccess","onError","request","Request","method","response","json","error","console","log","Object","defineProperty","_baseUrl","_baseUrl2","factory","isDataView","DataView","prototype","isPrototypeOf","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","support","iterable","Symbol","Headers","headers","map","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","length","i","fromCharCode","join","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","Error","text","decode","JSON","parse","normalizeMethod","upcased","toUpperCase","methods","indexOf","input","options","credentials","mode","signal","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","preProcessedHeaders","line","parts","key","Response","bodyInit","status","ok","statusText","init","abortXhr","xhr","abort","aborted","DOMException","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","self","e","viewClasses","isView","oldValue","has","hasOwnProperty","callback","thisArg","keys","push","values","entries","clone","redirectStatuses","redirect","RangeError","location","err","message","stack","create","constructor","polyfill","getBaseUrl","getQueryStringParameterByName","window","href","regex","RegExp","results","exec"],"mappings":"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","file":"main.75d6ede11497161fa2d1.js","sourcesContent":["webpackJsonp([0,1],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t__webpack_require__(1);\n\t\n\tvar _userApi = __webpack_require__(3);\n\t\n\t// Populate table of users via API call.\n\t(0, _userApi.getUsers)().then(function (result) {\n\t  var usersBody = \"\";\n\t\n\t  result.forEach(function (user) {\n\t    usersBody += '<tr>\\n      <td><a href=\"#\" data-id=\"' + user.id + '\" class=\"deleteUser\">Delete</a></td>\\n      <td>' + user.id + '</td>\\n      <td>' + user.firstName + '</td>\\n      <td>' + user.lastName + '</td>\\n      <td>' + user.email + '</td>\\n      </tr>';\n\t  });\n\t\n\t  global.document.getElementById('users').innerHTML = usersBody;\n\t\n\t  var deleteLinks = global.document.getElementsByClassName('deleteUser');\n\t\n\t  // Must use array.from to create a real array from a DOM collection\n\t  // getElementsByClassname only returns an \"array like\" object\n\t  Array.from(deleteLinks, function (link) {\n\t    link.onclick = function (event) {\n\t      var element = event.target;\n\t      event.preventDefault();\n\t      (0, _userApi.deleteUser)(element.attributes[\"data-id\"].value);\n\t      var row = element.parentNode.parentNode;\n\t      row.parentNode.removeChild(row);\n\t    };\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getUsers = getUsers;\n\texports.deleteUser = deleteUser;\n\t\n\t__webpack_require__(4);\n\t\n\tvar _baseUrl = __webpack_require__(5);\n\t\n\tvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar baseUrl = (0, _baseUrl2.default)();\n\t\n\tfunction getUsers() {\n\t  return get('users');\n\t}\n\t\n\tfunction deleteUser(id) {\n\t  return del('users/' + id);\n\t}\n\t\n\tfunction get(url) {\n\t  return fetch(baseUrl + url).then(onSuccess, onError);\n\t}\n\t\n\t// Can't call func delete since reserved word.\n\tfunction del(url) {\n\t  var request = new Request(baseUrl + url, {\n\t    method: 'DELETE'\n\t  });\n\t\n\t  return fetch(request).then(onSuccess, onError);\n\t}\n\t\n\tfunction onSuccess(response) {\n\t  return response.json();\n\t}\n\t\n\tfunction onError(error) {\n\t  console.log(error); // eslint-disable-line no-console\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? factory(exports) :\n\t  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t  (factory((global.WHATWGFetch = {})));\n\t}(this, (function (exports) { 'use strict';\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob:\n\t      'FileReader' in self &&\n\t      'Blob' in self &&\n\t      (function() {\n\t        try {\n\t          new Blob();\n\t          return true\n\t        } catch (e) {\n\t          return false\n\t        }\n\t      })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  };\n\t\n\t  function isDataView(obj) {\n\t    return obj && DataView.prototype.isPrototypeOf(obj)\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ];\n\t\n\t    var isArrayBufferView =\n\t      ArrayBuffer.isView ||\n\t      function(obj) {\n\t        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t      };\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name);\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value);\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift();\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    };\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      };\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {};\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value);\n\t      }, this);\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1]);\n\t      }, this);\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name]);\n\t      }, this);\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name);\n\t    value = normalizeValue(value);\n\t    var oldValue = this.map[name];\n\t    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n\t  };\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)];\n\t  };\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name);\n\t    return this.has(name) ? this.map[name] : null\n\t  };\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  };\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value);\n\t  };\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this);\n\t      }\n\t    }\n\t  };\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = [];\n\t    this.forEach(function(value, name) {\n\t      items.push(name);\n\t    });\n\t    return iteratorFor(items)\n\t  };\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = [];\n\t    this.forEach(function(value) {\n\t      items.push(value);\n\t    });\n\t    return iteratorFor(items)\n\t  };\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = [];\n\t    this.forEach(function(value, name) {\n\t      items.push([name, value]);\n\t    });\n\t    return iteratorFor(items)\n\t  };\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true;\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result);\n\t      };\n\t      reader.onerror = function() {\n\t        reject(reader.error);\n\t      };\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsArrayBuffer(blob);\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader();\n\t    var promise = fileReaderReady(reader);\n\t    reader.readAsText(blob);\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf);\n\t    var chars = new Array(view.length);\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i]);\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength);\n\t      view.set(new Uint8Array(buf));\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false;\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body;\n\t      if (!body) {\n\t        this._bodyText = '';\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body;\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body;\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body;\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString();\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer);\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body);\n\t      } else {\n\t        this._bodyText = body = Object.prototype.toString.call(body);\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type);\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n\t        }\n\t      }\n\t    };\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this);\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      };\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      };\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this);\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    };\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      };\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    };\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase();\n\t    return methods.indexOf(upcased) > -1 ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {};\n\t    var body = options.body;\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url;\n\t      this.credentials = input.credentials;\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers);\n\t      }\n\t      this.method = input.method;\n\t      this.mode = input.mode;\n\t      this.signal = input.signal;\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit;\n\t        input.bodyUsed = true;\n\t      }\n\t    } else {\n\t      this.url = String(input);\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'same-origin';\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers);\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET');\n\t    this.mode = options.mode || this.mode || null;\n\t    this.signal = options.signal || this.signal;\n\t    this.referrer = null;\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body);\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, {body: this._bodyInit})\n\t  };\n\t\n\t  function decode(body) {\n\t    var form = new FormData();\n\t    body\n\t      .trim()\n\t      .split('&')\n\t      .forEach(function(bytes) {\n\t        if (bytes) {\n\t          var split = bytes.split('=');\n\t          var name = split.shift().replace(/\\+/g, ' ');\n\t          var value = split.join('=').replace(/\\+/g, ' ');\n\t          form.append(decodeURIComponent(name), decodeURIComponent(value));\n\t        }\n\t      });\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers();\n\t    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n\t    // https://tools.ietf.org/html/rfc7230#section-3.2\n\t    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n\t    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':');\n\t      var key = parts.shift().trim();\n\t      if (key) {\n\t        var value = parts.join(':').trim();\n\t        headers.append(key, value);\n\t      }\n\t    });\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype);\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {};\n\t    }\n\t\n\t    this.type = 'default';\n\t    this.status = options.status === undefined ? 200 : options.status;\n\t    this.ok = this.status >= 200 && this.status < 300;\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n\t    this.headers = new Headers(options.headers);\n\t    this.url = options.url || '';\n\t    this._initBody(bodyInit);\n\t  }\n\t\n\t  Body.call(Response.prototype);\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  };\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''});\n\t    response.type = 'error';\n\t    return response\n\t  };\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308];\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  };\n\t\n\t  exports.DOMException = self.DOMException;\n\t  try {\n\t    new exports.DOMException();\n\t  } catch (err) {\n\t    exports.DOMException = function(message, name) {\n\t      this.message = message;\n\t      this.name = name;\n\t      var error = Error(message);\n\t      this.stack = error.stack;\n\t    };\n\t    exports.DOMException.prototype = Object.create(Error.prototype);\n\t    exports.DOMException.prototype.constructor = exports.DOMException;\n\t  }\n\t\n\t  function fetch(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init);\n\t\n\t      if (request.signal && request.signal.aborted) {\n\t        return reject(new exports.DOMException('Aborted', 'AbortError'))\n\t      }\n\t\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      function abortXhr() {\n\t        xhr.abort();\n\t      }\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        };\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n\t        resolve(new Response(body, options));\n\t      };\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'));\n\t      };\n\t\n\t      xhr.onabort = function() {\n\t        reject(new exports.DOMException('Aborted', 'AbortError'));\n\t      };\n\t\n\t      xhr.open(request.method, request.url, true);\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true;\n\t      } else if (request.credentials === 'omit') {\n\t        xhr.withCredentials = false;\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob';\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value);\n\t      });\n\t\n\t      if (request.signal) {\n\t        request.signal.addEventListener('abort', abortXhr);\n\t\n\t        xhr.onreadystatechange = function() {\n\t          // DONE (success or failure)\n\t          if (xhr.readyState === 4) {\n\t            request.signal.removeEventListener('abort', abortXhr);\n\t          }\n\t        };\n\t      }\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n\t    })\n\t  }\n\t\n\t  fetch.polyfill = true;\n\t\n\t  if (!self.fetch) {\n\t    self.fetch = fetch;\n\t    self.Headers = Headers;\n\t    self.Request = Request;\n\t    self.Response = Response;\n\t  }\n\t\n\t  exports.Headers = Headers;\n\t  exports.Request = Request;\n\t  exports.Response = Response;\n\t  exports.fetch = fetch;\n\t\n\t  Object.defineProperty(exports, '__esModule', { value: true });\n\t\n\t})));\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = getBaseUrl;\n\tfunction getBaseUrl() {\n\t  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://mysterious-dawn-16770.herokuapp.com/';\n\t}\n\t\n\tfunction getQueryStringParameterByName(name, url) {\n\t  if (!url) url = window.location.href;\n\t  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n\t  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n\t      results = regex.exec(url);\n\t  if (!results) return null;\n\t  if (!results[2]) return '';\n\t  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n\t}\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main.75d6ede11497161fa2d1.js\n **/","import './index.css';\n\nimport {getUsers, deleteUser} from './api/userApi';\n\n// Populate table of users via API call.\ngetUsers().then(result => {\n  let usersBody = \"\";\n\n  result.forEach(user => {\n    usersBody+= `<tr>\n      <td><a href=\"#\" data-id=\"${user.id}\" class=\"deleteUser\">Delete</a></td>\n      <td>${user.id}</td>\n      <td>${user.firstName}</td>\n      <td>${user.lastName}</td>\n      <td>${user.email}</td>\n      </tr>`\n  });\n\n  global.document.getElementById('users').innerHTML = usersBody;\n\n  const deleteLinks = global.document.getElementsByClassName('deleteUser');\n\n  // Must use array.from to create a real array from a DOM collection\n  // getElementsByClassname only returns an \"array like\" object\n  Array.from(deleteLinks, link => {\n    link.onclick = function(event) {\n      const element = event.target;\n      event.preventDefault();\n      deleteUser(element.attributes[\"data-id\"].value);\n      const row = element.parentNode.parentNode;\n      row.parentNode.removeChild(row);\n    };\n  });\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import 'whatwg-fetch';\nimport getBaseUrl from './baseUrl';\n\nconst baseUrl = getBaseUrl();\n\nexport function getUsers() {\n  return get('users');\n}\n\nexport function deleteUser(id) {\n  return del(`users/${id}`);\n}\n\nfunction get(url) {\n  return fetch(baseUrl + url).then(onSuccess, onError);\n}\n\n// Can't call func delete since reserved word.\nfunction del(url) {\n  const request = new Request(baseUrl + url, {\n    method: 'DELETE'\n  });\n\n  return fetch(request).then(onSuccess, onError);\n}\n\nfunction onSuccess(response) {\n  return response.json();\n}\n\nfunction onError(error) {\n  console.log(error); // eslint-disable-line no-console\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/userApi.js\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.WHATWGFetch = {})));\n}(this, (function (exports) { 'use strict';\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/dist/fetch.umd.js\n ** module id = 4\n ** module chunks = 0\n **/","export default function getBaseUrl() {\n  return getQueryStringParameterByName('useMockApi') ? 'http://localhost:3001/' : 'https://mysterious-dawn-16770.herokuapp.com/';\n}\n\nfunction getQueryStringParameterByName(name, url) {\n  if (!url) url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n  var regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\"),\n      results = regex.exec(url);\n  if (!results) return null;\n  if (!results[2]) return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api/baseUrl.js\n **/"],"sourceRoot":""}